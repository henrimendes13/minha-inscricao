-- Migração inicial - Criação de todas as tabelas do sistema
-- Versão: V1
-- Descrição: Criação do schema inicial com todas as entidades

-- Tabela de usuários
CREATE TABLE usuarios (
    id bigint GENERATED BY DEFAULT AS IDENTITY,
    aceita_termos boolean NOT NULL,
    ativo boolean NOT NULL,
    cnpj varchar(18),
    cpf varchar(14),
    created_at timestamp(6) NOT NULL,
    data_nascimento date,
    descricao varchar(500),
    email varchar(150) NOT NULL,
    emergencia_nome varchar(100),
    emergencia_telefone varchar(15),
    endereco varchar(200),
    genero varchar(20) CHECK (genero IN ('MASCULINO','FEMININO')),
    nome varchar(100) NOT NULL,
    nome_empresa varchar(100),
    observacoes_medicas varchar(500),
    senha varchar(100) NOT NULL,
    site varchar(100),
    telefone varchar(15),
    ultimo_login timestamp(6),
    updated_at timestamp(6),
    verificado boolean NOT NULL,
    PRIMARY KEY (id)
);

-- Tabela de organizadores
CREATE TABLE organizadores (
    id bigint GENERATED BY DEFAULT AS IDENTITY,
    cnpj varchar(18),
    created_at timestamp(6) NOT NULL,
    descricao varchar(500),
    endereco varchar(200),
    nome_empresa varchar(100),
    site varchar(100),
    telefone varchar(15),
    updated_at timestamp(6),
    verificado boolean NOT NULL,
    usuario_id bigint NOT NULL,
    PRIMARY KEY (id)
);

-- Tabela de eventos
CREATE TABLE eventos (
    id bigint GENERATED BY DEFAULT AS IDENTITY,
    created_at timestamp(6) NOT NULL,
    data_fim_evento timestamp(6) NOT NULL,
    data_inicio_evento timestamp(6) NOT NULL,
    descricao TEXT,
    nome varchar(200) NOT NULL,
    status varchar(30) CHECK (status IN ('RASCUNHO','ABERTO','INSCRICOES_ENCERRADAS','EM_ANDAMENTO','FINALIZADO','CANCELADO','ADIADO')),
    updated_at timestamp(6),
    organizador_id bigint,
    PRIMARY KEY (id)
);

-- Tabela de categorias
CREATE TABLE categorias (
    id bigint GENERATED BY DEFAULT AS IDENTITY,
    ativa boolean NOT NULL,
    created_at timestamp(6) NOT NULL,
    descricao varchar(300),
    genero varchar(20) CHECK (genero IN ('MASCULINO','FEMININO')),
    idade_maxima integer,
    idade_minima integer,
    nome varchar(100) NOT NULL,
    quantidade_atletas_por_equipe integer,
    tipo_participacao varchar(20) NOT NULL CHECK (tipo_participacao IN ('INDIVIDUAL','EQUIPE')),
    updated_at timestamp(6),
    valor_inscricao numeric(10,2) NOT NULL,
    evento_id bigint NOT NULL,
    PRIMARY KEY (id)
);

-- Tabela de atletas
CREATE TABLE atletas (
    id bigint GENERATED BY DEFAULT AS IDENTITY,
    aceita_termos boolean NOT NULL,
    cpf varchar(14),
    created_at timestamp(6) NOT NULL,
    data_nascimento date NOT NULL,
    emergencia_nome varchar(100),
    emergencia_telefone varchar(15),
    endereco varchar(200),
    genero varchar(20) NOT NULL CHECK (genero IN ('MASCULINO','FEMININO')),
    nome varchar(200) NOT NULL,
    observacoes_medicas varchar(500),
    telefone varchar(15),
    updated_at timestamp(6),
    equipe_id bigint,
    evento_id bigint,
    inscricao_id bigint,
    PRIMARY KEY (id)
);

-- Tabela de equipes
CREATE TABLE equipes (
    id bigint GENERATED BY DEFAULT AS IDENTITY,
    ativa boolean NOT NULL,
    created_at timestamp(6) NOT NULL,
    descricao varchar(300),
    nome varchar(100) NOT NULL,
    updated_at timestamp(6),
    capitao_id bigint NOT NULL,
    categoria_id bigint NOT NULL,
    evento_id bigint NOT NULL,
    PRIMARY KEY (id)
);

-- Tabela de relacionamento equipe-usuarios
CREATE TABLE equipe_usuarios (
    equipe_id bigint NOT NULL,
    usuario_id bigint NOT NULL
);

-- Tabela de inscrições
CREATE TABLE inscricoes (
    id bigint GENERATED BY DEFAULT AS IDENTITY,
    codigo_desconto varchar(100),
    created_at timestamp(6) NOT NULL,
    data_cancelamento timestamp(6),
    data_confirmacao timestamp(6),
    data_inscricao timestamp(6) NOT NULL,
    motivo_cancelamento varchar(200),
    status varchar(20) NOT NULL CHECK (status IN ('PENDENTE','CONFIRMADA','CANCELADA','RECUSADA','EXPIRADA','LISTA_ESPERA')),
    termos_aceitos boolean NOT NULL,
    updated_at timestamp(6),
    valor numeric(10,2) NOT NULL,
    valor_desconto numeric(10,2),
    atleta_id bigint NOT NULL,
    categoria_id bigint NOT NULL,
    equipe_id bigint,
    evento_id bigint NOT NULL,
    PRIMARY KEY (id)
);

-- Tabela de workouts
CREATE TABLE workouts (
    id bigint GENERATED BY DEFAULT AS IDENTITY,
    ativo boolean NOT NULL,
    created_at timestamp(6) NOT NULL,
    descricao TEXT,
    nome varchar(200) NOT NULL,
    resultado_peso float(53),
    resultado_reps integer,
    resultado_tempo_segundos integer,
    tipo varchar(20) NOT NULL CHECK (tipo IN ('REPS','PESO','TEMPO')),
    updated_at timestamp(6),
    evento_id bigint NOT NULL,
    PRIMARY KEY (id)
);

-- Tabela de relacionamento workout-categorias
CREATE TABLE workout_categorias (
    workout_id bigint NOT NULL,
    categoria_id bigint NOT NULL
);

-- Tabela de leaderboards
CREATE TABLE leaderboards (
    id bigint GENERATED BY DEFAULT AS IDENTITY,
    created_at timestamp(6) NOT NULL,
    finalizado boolean NOT NULL,
    pontuacao_total numeric(10,2),
    posicao_workout integer NOT NULL,
    resultado_peso float(53),
    resultado_reps integer,
    resultado_tempo_segundos integer,
    updated_at timestamp(6),
    atleta_id bigint,
    categoria_id bigint NOT NULL,
    equipe_id bigint,
    evento_id bigint NOT NULL,
    workout_id bigint NOT NULL,
    PRIMARY KEY (id)
);

-- Tabela de pagamentos
CREATE TABLE pagamentos (
    id bigint GENERATED BY DEFAULT AS IDENTITY,
    boleto_codigo_barras varchar(50),
    boleto_url varchar(200),
    created_at timestamp(6) NOT NULL,
    data_pagamento timestamp(6),
    data_processamento timestamp(6),
    data_vencimento timestamp(6),
    forma_pagamento varchar(20) NOT NULL CHECK (forma_pagamento IN ('PIX','CARTAO_CREDITO','CARTAO_DEBITO','BOLETO','TRANSFERENCIA','DINHEIRO')),
    gateway_id varchar(100),
    motivo_recusa varchar(300),
    observacoes varchar(500),
    pix_chave varchar(200),
    pix_qr_code varchar(500),
    status varchar(20) NOT NULL CHECK (status IN ('PENDENTE','PROCESSANDO','APROVADO','RECUSADO','CANCELADO','ESTORNADO','EXPIRADO')),
    transacao_id varchar(100),
    updated_at timestamp(6),
    valor numeric(10,2) NOT NULL,
    inscricao_id bigint NOT NULL,
    PRIMARY KEY (id)
);

-- Tabela de anexos
CREATE TABLE anexos (
    id bigint GENERATED BY DEFAULT AS IDENTITY,
    ativo boolean NOT NULL,
    caminho_arquivo varchar(1000) NOT NULL,
    checksum_md5 varchar(32),
    created_at timestamp(6) NOT NULL,
    descricao varchar(1000),
    extensao varchar(10),
    nome_arquivo varchar(500) NOT NULL,
    tamanho_bytes bigint NOT NULL,
    tipo_mime varchar(100) NOT NULL,
    updated_at timestamp(6),
    evento_id bigint NOT NULL,
    PRIMARY KEY (id)
);

-- Tabela de timelines
CREATE TABLE timelines (
    id bigint GENERATED BY DEFAULT AS IDENTITY,
    created_at timestamp(6) NOT NULL,
    descricao_dia_dois TEXT,
    descricao_dia_quatro TEXT,
    descricao_dia_tres TEXT,
    descricao_dia_um TEXT,
    updated_at timestamp(6),
    evento_id bigint NOT NULL,
    PRIMARY KEY (id)
);

-- ========================================
-- CONSTRAINTS UNIQUE
-- ========================================

-- Atletas
ALTER TABLE atletas ADD CONSTRAINT UKcl52rfn1vla9btledpq3hqkdh UNIQUE (cpf);

-- Equipe usuários
ALTER TABLE equipe_usuarios ADD CONSTRAINT UKjfynbmfbu7fqg00f3fqj6ubmg UNIQUE (equipe_id, usuario_id);

-- Equipes
ALTER TABLE equipes ADD CONSTRAINT UKh1aqmar9cmltuvtchjnkgjq0 UNIQUE (nome, evento_id);

-- Inscrições
ALTER TABLE inscricoes ADD CONSTRAINT UK6djfgjwm27013t3yi7u9pg1y4 UNIQUE (equipe_id);

-- Leaderboards
ALTER TABLE leaderboards ADD CONSTRAINT UKbwe4eqbhm0dedk3f6wsj1m0w7 UNIQUE (categoria_id, workout_id, equipe_id, atleta_id);

-- Organizadores
ALTER TABLE organizadores ADD CONSTRAINT UKlb3461yxm5yxx7jygw4d8s2vg UNIQUE (cnpj);
ALTER TABLE organizadores ADD CONSTRAINT UKdjmokqfhaw8pch933pps330ty UNIQUE (usuario_id);

-- Pagamentos
ALTER TABLE pagamentos ADD CONSTRAINT UK3yb5uo9mgf2kl6on8jq0r2lwv UNIQUE (inscricao_id);
ALTER TABLE pagamentos ADD CONSTRAINT UK8yx4qchfxhsq7n0rn16v5t7e5 UNIQUE (transacao_id);

-- Timelines
ALTER TABLE timelines ADD CONSTRAINT UKiwdtfqmx8bfw8j0o6j20gx84r UNIQUE (evento_id);

-- Usuários
ALTER TABLE usuarios ADD CONSTRAINT UKkfsp0s1tflm1cwlj8idhqsad0 UNIQUE (email);
ALTER TABLE usuarios ADD CONSTRAINT UK7rdjvh2hvclc1vu6hqj8jlj0h UNIQUE (cpf);
ALTER TABLE usuarios ADD CONSTRAINT UKcvgkx5s0vrh8yj5kgh4h5qvpr UNIQUE (cnpj);

-- ========================================
-- FOREIGN KEYS
-- ========================================

-- Anexos
ALTER TABLE anexos ADD CONSTRAINT FK5qs7a2i41hqs7krj7xm5qr8xt FOREIGN KEY (evento_id) REFERENCES eventos(id);

-- Atletas
ALTER TABLE atletas ADD CONSTRAINT FK7s8ca7i8i4bvyy9w9bp7kljy9 FOREIGN KEY (equipe_id) REFERENCES equipes(id);
ALTER TABLE atletas ADD CONSTRAINT FKo9v2qkc7x5sgjjkmvl5cgwrha FOREIGN KEY (evento_id) REFERENCES eventos(id);
ALTER TABLE atletas ADD CONSTRAINT FKfbqdvho4x1fby8pclb5bblwgr FOREIGN KEY (inscricao_id) REFERENCES inscricoes(id);

-- Categorias
ALTER TABLE categorias ADD CONSTRAINT FKmd4fmf5ij3l5o1o7xesvfgjp8 FOREIGN KEY (evento_id) REFERENCES eventos(id);

-- Equipe usuários
ALTER TABLE equipe_usuarios ADD CONSTRAINT FKrv1k2r7cvmr5wm2p25jwj7x4t FOREIGN KEY (usuario_id) REFERENCES usuarios(id);
ALTER TABLE equipe_usuarios ADD CONSTRAINT FK6xgkow9e2kxr7gshbqfxj10ne FOREIGN KEY (equipe_id) REFERENCES equipes(id);

-- Equipes
ALTER TABLE equipes ADD CONSTRAINT FK1v2rdhp6k64ypccnj4t2p3u6m FOREIGN KEY (capitao_id) REFERENCES usuarios(id);
ALTER TABLE equipes ADD CONSTRAINT FKb55k4ps9igc1h7xo5gf8uv2y7 FOREIGN KEY (categoria_id) REFERENCES categorias(id);
ALTER TABLE equipes ADD CONSTRAINT FKkpowb2m5i9xpj4q7p5sppjklw FOREIGN KEY (evento_id) REFERENCES eventos(id);

-- Eventos
ALTER TABLE eventos ADD CONSTRAINT FKql8q9x9hq2qd0ltn3y8mhbp0y FOREIGN KEY (organizador_id) REFERENCES usuarios(id);

-- Inscrições
ALTER TABLE inscricoes ADD CONSTRAINT FKhw9kxhj99dvjpxkj5gr9sxgfq FOREIGN KEY (atleta_id) REFERENCES atletas(id);
ALTER TABLE inscricoes ADD CONSTRAINT FK8x9u6b32i9d8hoy4qhqhsj3e FOREIGN KEY (categoria_id) REFERENCES categorias(id);
ALTER TABLE inscricoes ADD CONSTRAINT FKmtgbhyg6s5dg8hxnnj5u0a4l FOREIGN KEY (equipe_id) REFERENCES equipes(id);
ALTER TABLE inscricoes ADD CONSTRAINT FKcfho1qrng32t8v98n4ijnpqto FOREIGN KEY (evento_id) REFERENCES eventos(id);

-- Leaderboards
ALTER TABLE leaderboards ADD CONSTRAINT FK39yir3b9h9vn2k1s8bwb9ry8j FOREIGN KEY (atleta_id) REFERENCES atletas(id);
ALTER TABLE leaderboards ADD CONSTRAINT FK6sbt66x9xdv2gcjqk8gk9vo8p FOREIGN KEY (categoria_id) REFERENCES categorias(id);
ALTER TABLE leaderboards ADD CONSTRAINT FKek8qvl7bm4d7l3wxdj7scgoxb FOREIGN KEY (equipe_id) REFERENCES equipes(id);
ALTER TABLE leaderboards ADD CONSTRAINT FK7w5f1o0gce8k2w1x8cvnbggj3 FOREIGN KEY (evento_id) REFERENCES eventos(id);
ALTER TABLE leaderboards ADD CONSTRAINT FK8h1v7hn9cxw5t5bhqo1rsdh9p FOREIGN KEY (workout_id) REFERENCES workouts(id);

-- Organizadores
ALTER TABLE organizadores ADD CONSTRAINT FKl72dtp5cxcwsq8y08oj5jqb1 FOREIGN KEY (usuario_id) REFERENCES usuarios(id);

-- Pagamentos
ALTER TABLE pagamentos ADD CONSTRAINT FKayax5gnjcr8srls9qd5qwlcvj FOREIGN KEY (inscricao_id) REFERENCES inscricoes(id);

-- Timelines
ALTER TABLE timelines ADD CONSTRAINT FKd4w3jn1dmxlgxlgdw2t46x4l6 FOREIGN KEY (evento_id) REFERENCES eventos(id);

-- Workout categorias
ALTER TABLE workout_categorias ADD CONSTRAINT FKb25sjjr2xbqxhxq5wfkdejb1q FOREIGN KEY (categoria_id) REFERENCES categorias(id);
ALTER TABLE workout_categorias ADD CONSTRAINT FKt1ixd4wg2r7ljqcnwh8ot40qx FOREIGN KEY (workout_id) REFERENCES workouts(id);

-- Workouts
ALTER TABLE workouts ADD CONSTRAINT FK2cr4x1a3n9q3xhvvpfm0r5c09 FOREIGN KEY (evento_id) REFERENCES eventos(id);